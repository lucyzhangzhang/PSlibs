              "ps44_S8",
              "ps37_S4",
              "ps41_S7",
              "ps50_S12")
metadata <- data.frame(sampleNO = sampleNO,
                       condition = condition,
                       libraryName = sampleNO,
                        reps = rep(c(1, 2, 3), 4))
metadata <- mutate(metadata, countFile = paste0(metadata$libraryName, "/QC.geneCounts.formatted.for.DESeq.txt"))
sampleTable <- data.frame(sampleName = metadata$libraryName,
                          fileName = metadata$countFile,
                          condition = metadata$condition,
                          sampleNO = metadata$sampleNO
                          reps = metadata$reps)
                          sampleNO = metadata$sampleNO,
sampleTable <- data.frame(sampleName = metadata$libraryName,
                          fileName = metadata$countFile,
                          condition = metadata$condition,
                          sampleNO = metadata$sampleNO,
                          reps = metadata$reps)
DESeq2Table <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                          directory = "QoRTs",
                                          design = ~ condition)
                                          design = ~ reps + condition)
DESeq2Table <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                          directory = "QoRTs",
                                          design = ~ reps + condition)
                        reps = as.factor(rep(c(1, 2, 3), 4)))
metadata <- data.frame(sampleNO = sampleNO,
                       condition = condition,
                       libraryName = sampleNO,
                        reps = as.factor(rep(c(1, 2, 3), 4)))
                          fileName = metadata$countFile,
sampleTable <- data.frame(sampleName = metadata$libraryName,
                          fileName = metadata$countFile,
                          condition = metadata$condition,
                          sampleNO = metadata$sampleNO,
                          reps = metadata$reps)
metadata <- data.frame(sampleNO = sampleNO,
                       condition = condition,
                       libraryName = sampleNO,
                        reps = as.factor(rep(c(1, 2, 3), 4)))
metadata <- mutate(metadata, countFile = paste0(metadata$libraryName, "/QC.geneCounts.formatted.for.DESeq.txt"))
sampleTable <- data.frame(sampleName = metadata$libraryName,
                          fileName = metadata$countFile,
                          condition = metadata$condition,
                          sampleNO = metadata$sampleNO,
                          reps = metadata$reps)
DESeq2Table <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                          directory = "QoRTs",
                                          design = ~ reps + condition)
keep <- rowSums(counts(DESeq2Table)) >= 10
DESeq2Table <- DESeq2Table[keep,]
dds <- DESeq(DESeq2Table, test = "Wald")
keep <- rowSums(counts(DESeq2Table)) >= 10
res.HPLS <- results(dds, contrast = c("condition", "HPHS", "HPLS"))
res.LPHS <- results(dds, contrast = c("condition", "HPHS", "LPHS"))
res.LPLS <- results(dds, contrast = c("condition", "HPHS", "LPLS"))
venn(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05),]),
                       LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05),]),
                       LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05),])), zcolor = "style")
res.LPLS
head(res.LPLS)
venn(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"pvalue"] < 0.05),]),
                       LPHS=rownames(res.LPHS[which(res.LPHS[,"pvalue"] < 0.05),]),
                       LPLS=rownames(res.LPLS[which(res.LPLS[,"pvalue"] < 0.05),])), zcolor = "style")
dds <- DESeq(DESeq2Table)
res.HPLS <- results(dds, contrast = c("condition", "HPHS", "HPLS"))
res.LPHS <- results(dds, contrast = c("condition", "HPHS", "LPHS"))
res.LPLS <- results(dds, contrast = c("condition", "HPHS", "LPLS"))
head(res.HPLS)
venn(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05),]),
                       LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05),]),
                       LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05),])), zcolor = "style")
head(res.HPLS, 100)
head(assay(dds)
)
head(DESeq2Table)
head(DESeq2Table$ESeq2Table$batch <- factor(DESeq2Table$reps, levels = c(1, 2, 3))
DESeq2Table$batch <- factor(DESeq2Table$reps, levels = c(1, 2, 3))
dds <- DESeq(DESeq2Table)
res.HPLS <- results(dds, contrast = c("condition", "HPHS", "HPLS"))
res.LPHS <- results(dds, contrast = c("condition", "HPHS", "LPHS"))
res.LPLS <- results(dds, contrast = c("condition", "HPHS", "LPLS"))
r1_2 <- cbind.data.frame(row.names(res.HPLS), res.HPLS$log2FoldChange, res.HPLS$lfcSE, rep("HPLS", nrow(res.HPLS)))
colnames(r1_2) <- c("gene", "lfc", "se", "sample")
r1_3 <- cbind.data.frame(row.names(res.LPHS), res.LPHS$log2FoldChange, res.LPHS$lfcSE, rep("LPHS", nrow(res.LPHS)))
colnames(r1_3) <- c("gene", "lfc", "se", "sample")
r1_4 <- cbind.data.frame(row.names(res.LPLS), res.LPLS$log2FoldChange, res.LPLS$lfcSE, rep("LPLS", nrow(res.LPLS)))
colnames(r1_4) <- c("gene", "lfc", "se", "sample")
LPHS=rownames(res1_3[which(res1_3[,"padj"] < 0.05),]),
venn(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05),]),
                       LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05),]),
                       LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05),])), zcolor = "style")
?p.adjust
resultsNames(dds)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "HPHS"))
res.LPHS <- results(dds, contrast = c("condition", "LPHS", "HPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "HPHS"))
venn(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05),]),
                       LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05),]),
                       LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05),])), zcolor = "style")
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "HPHS")
dds <- DESeq(DESeq2Table)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "HPHS"))
res.LPHS <- results(dds, contrast = c("condition", "LPHS", "HPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "HPHS"))
venn(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05),]),
                       LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05),]),
                       LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05),])), zcolor = "style")
?results
?p.adjust
DESeq2Table <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                          directory = "QoRTs",
                                          design = ~ reps + condition)
keep <- rowSums(counts(DESeq2Table)) >= 10
DESeq2Table <- DESeq2Table[keep,]
DESeq2Table$batch <- factor(DESeq2Table$reps, levels = c(1, 2, 3))
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "HPHS")
dds <- DESeq(DESeq2Table)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "HPHS"))
res.LPHS <- results(dds, contrast = c("condition", "LPHS", "HPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "HPHS"))
resultsNames(dds)
venn(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05),]),
                       LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05),]),
                       LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05),])), zcolor = "style")
                  F=rownames(res1_F[which(res1_F[,"padj"] < 0.05 & res1_F[,"log2FoldChange"] > 0),])),
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
                  LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]),
                  LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]),
                  filename = NULL, col = "red")
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
                  LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]),
                  LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])),
                  filename = NULL, col = "red")
                  filename = NULL, col = "red")
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
                  LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]),
                  LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])),
                  filename = NULL, col = "red")
library(VennDiagram) #used for venn
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
                  LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]),
                  LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])),
                  filename = NULL, col = "red")
downPS <-venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]),
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar, fontfamily = "serif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "serif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar, fontfamily = "serif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "serif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "serif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar, fontfamily = "serif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "serif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
library(grid) #used for venn and graphs
library(gridExtra) #used for Venn and graphs
library(cowplot)  #used for log2 expression graphs
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar, fontfamily = "serif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "serif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
library(grid) #used for venn and graphs
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "serif")))),
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar, fontfamily = "serif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "serif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
?gpar
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar, fontfamily = "HersheySerif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar( fontfamily = "HersheySerif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar fontfamily = "HersheySerif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar fontfamily = "HersheySerif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif"))),
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif"))),
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif"))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS)),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif")))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
downPS <-venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]),
                   LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),]),
                   LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]),
                   filename = NULL, col = "navyblue")
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
                  LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]),
                  LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])),
                  filename = NULL, col = "red")
upPS <- venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]),
                  LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]),
                  LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])),
                  filename = NULL, col = "red")
downPS <-venn.diagram(list(HPLS=rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]),
                   LPHS=rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),]),
                   LPLS=rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),])),
#                   F=rownames(res1_F[which(res1_F[,"padj"] < 0.05 & res1_F[,"log2FoldChange"] < 0),])),
                   filename = NULL, col = "navyblue")
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif")))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
png("vennDiagramJuly.png", height = 800, width = 1200, res = 125)
grid.arrange(gTree(children = gList(textGrob("Upregulated", gp = gpar(fontfamily = "HersheySerif")))),
  gTree(children = gList(textGrob("Downregulated", gp = gpar(fontfamily = "HersheySerif")))),
gTree(children = upPS),
gTree(children = downPS),
ncol = 2, widths = c(1, 1), heights = c(0.04, 1))
dev.off()
rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),])
rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),])
rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),])
rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])
rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),])
rownames(res1_F[which(res1_F[,"padj"] < 0.05 & res1_F[,"log2FoldChange"] > 0),])
rownames(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),])
rownames(res1_F[which(res1_F[,"padj"] < 0.05 & res1_F[,"log2FoldChange"] > 0),])
rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),])
rownames(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),])
rownames(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),])
str(expr_annot$Scaffold)
str()
str(exprVals$PC1)
str(exprVals$PC2)
summary(exprVals)
exprVals
str(neg4$PC2)
str(sampleTable$sampleName)
str(ps.cov)
str(ps.log)
pca
str(pos2neg4$PC2)
pca
summary(pca)
pca$rotation
pca$center
pca$x
pca$dev
class(summary(pca))
rowsum(summary(pca))
rowsum(summary(pca[2,[))
rowsum(summary(pca[2,]))
summary(pca)
0.9867+0.00781+0.0033+0.00222
0.9867+0.00781+0.0033+0.00222
q90
q()
library(DESeq2) #DEG analysis
library(plyr) #data manipulation
library(gplots) #graphing and visualization
library(genefilter) #GFF maker
library(dplyr) #graphing
library(geneplotter) #graphing
metadata <- data.frame(sampleNO = sampleNO,
                       condition = condition,
                       libraryName = sampleNO,
                        reps = as.factor(rep(c(1, 2, 3), 4)))
metadata <- mutate(metadata, countFile = paste0(metadata$libraryName, "/QC.geneCounts.formatted.for.DESeq.txt"))
sampleTable <- data.frame(sampleName = metadata$libraryName,
                          fileName = metadata$countFile,
                          condition = metadata$condition,
                          sampleNO = metadata$sampleNO,
                          reps = metadata$reps)
DESeq2Table <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                          directory = "QoRTs",
                                          design = ~ reps + condition)
keep <- rowSums(counts(DESeq2Table)) >= 10
DESeq2Table <- DESeq2Table[keep,]
DESeq2Table$batch <- factor(DESeq2Table$reps, levels = c(1, 2, 3))
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "LPHS")
dds <- DESeq(DESeq2Table)
resultsNames(dds)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "LPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "LPHS"))
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]
HL.up <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
HL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),] )
LL.up <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),] )
LL.dn <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),] )
HP.up
HL.up
LPHScompare <- matrix(c(HL.up, HL.dn, LL.up, LL.dn), nrow = 2)
LPHScompare
HL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),] )
HL.dn
LL.dn
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "LPHS"))
LL.up <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),] )
LL.dn <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),] )
LPHScompare <- matrix(c(HL.up, HL.dn, LL.up, LL.dn), nrow = 2)
LPHScompare
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "LPHS")
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "LPHS")
dds <- DESeq(DESeq2Table)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "LPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "LPHS"))
HL.up <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
HL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),] )
LL.up <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),] )
LL.up <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),] )
LL.dn <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),] )
LPHScompare <- matrix(c(HL.up, HL.dn, LL.up, LL.dn), nrow = 2)
LPHScompare
HL.dn
LL.up
HL.up
LL.dn
res.LPLS
head(res.LPLS)
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "LPLS")
dds <- DESeq(DESeq2Table)
resultsNames(dds)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "LPLS"))
LL.up <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
LL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),])
LPLSompare <- c(LL.up, LL.dn)
LPLScompare <- c(LL.up, LL.dn)
LPLScompare
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "HPHS")
dds <- DESeq(DESeq2Table)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "HPHS"))
res.LPHS <- results(dds, contrast = c("condition", "LPHS", "HPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "HPHS"))
HL.up <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
HL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),])
LH.up <- nrow(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),])
LH.dn <- nrow(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),])
LL.up <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])
LL.dn <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),])
HPHScompare <- matrix(c(HL.up, HL.dn, LH.up, LH.dn, LL.up, LL.dn), nrow = 3)
HPHScompare
HPHScompare <- matrix(c(HL.up, HL.dn, LH.up, LH.dn, LL.up, LL.dn), ncol = 3)
HPHScompare
HPHScompare <- matrix(c(HL.up, HL.dn, LH.up, LH.dn, LL.up, LL.dn), ncol = 2)
HPHScompare
HL.up
HL.dn
HPHScompare <- matrix(c(HL.up, HL.dn, LH.up, LH.dn, LL.up, LL.dn), ncol = 2, byrow = T)
HPHScompare
LPHScompare <- matrix(c(HL.up, HL.dn, LL.up, LL.dn), ncol = 2, byrow = T)
data <- rbind(HPHScompare, LPHScompare, LPLScompare)
dat
data
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "LPHS")
dds <- DESeq(DESeq2Table)
resultsNames(dds)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "LPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "LPHS"))
HL.up <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
HL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),] )
LL.up <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),] )
LL.dn <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),] )
HL.up
LPHScompare <- matrix(c(HL.up, HL.dn, LL.up, LL.dn), ncol = 2, byrow = T)
LPHScompare
data <- rbind(HPHScompare, LPHScompare, LPLScompare)
data
colnames(data) <- c("up", "down")
data <- cbind(c(rep("HPHS", 3), rep("LPHS", 2), "LPLS"), c("HPLS", "LPHS", "LPLS", "HPLS", "LPLS", "HPLS"), data)
colnames(data) <- c("denom", "numerator", "up", "down")
data
data <- as.data.frame(data, stringsAsfactors = F)
data
rownames(data) <- NULL
data
write.table(data, "~/committee/DEGcount", sep = " & ", quote = F, eol = " \\\\\n")
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),)
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "HPHS")
dds <- DESeq(DESeq2Table)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "HPHS"))
res.LPHS <- results(dds, contrast = c("condition", "LPHS", "HPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "HPHS"))
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),]
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "LPHS")
dds <- DESeq(DESeq2Table)
resultsNames(dds)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "LPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "LPHS"))
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "LPLS")
dds <- DESeq(DESeq2Table)
resultsNames(dds)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "LPLS"))
LL.up <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
LL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),])
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),]
res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),]
q()
load(".RData")
library(DESeq2) #DEG analysis
library(plyr) #data manipulation
library(gplots) #graphing and visualization
library(genefilter) #GFF maker
library(dplyr) #graphing
library(geneplotter) #graphing
setwd("~/R/Eutrema/PS") #stuff in here
condition <- as.factor(c(rep(c("LPLS", "HPLS", "LPHS", "HPHS"), each = 3)))
metadata <- data.frame(sampleNO = sampleNO,
                       condition = condition,
                       libraryName = sampleNO,
                        reps = as.factor(rep(c(1, 2, 3), 4)))
metadata <- mutate(metadata, countFile = paste0(metadata$libraryName, "/QC.geneCounts.formatted.for.DESeq.txt"))
sampleTable <- data.frame(sampleName = metadata$libraryName,
                          fileName = metadata$countFile,
                          condition = metadata$condition,
                          sampleNO = metadata$sampleNO,
                          reps = metadata$reps)
DESeq2Table <- DESeqDataSetFromHTSeqCount(sampleTable = sampleTable,
                                          directory = "QoRTs",
                                          design = ~ reps + condition)
keep <- rowSums(counts(DESeq2Table)) >= 10
DESeq2Table <- DESeq2Table[keep,]
DESeq2Table$batch <- factor(DESeq2Table$reps, levels = c(1, 2, 3))
DESeq2Table$condition <- relevel(DESeq2Table$condition, ref = "HPHS")
dds <- DESeq(DESeq2Table)
resultsNames(dds)
res.HPLS <- results(dds, contrast = c("condition", "HPLS", "HPHS"))
res.LPHS <- results(dds, contrast = c("condition", "LPHS", "HPHS"))
res.LPLS <- results(dds, contrast = c("condition", "LPLS", "HPHS"))
#numbers
HL.up <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] > 0),])
HL.dn <- nrow(res.HPLS[which(res.HPLS[,"padj"] < 0.05 & res.HPLS[,"log2FoldChange"] < 0),])
LH.up <- nrow(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),])
LH.dn <- nrow(res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),])
LL.up <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),])
LL.dn <- nrow(res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),])
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] > 0),]
res.LPHS[which(res.LPHS[,"padj"] < 0.05 & res.LPHS[,"log2FoldChange"] < 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] > 0),]
res.LPLS[which(res.LPLS[,"padj"] < 0.05 & res.LPLS[,"log2FoldChange"] < 0),]
#group into matrix
HPHScompare <- matrix(c(HL.up, HL.dn, LH.up, LH.dn, LL.up, LL.dn), ncol = 2, byrow = T)
HPHScompare
sampleVals
exprVals
(headpca$x)
head(pca$x)
q()
